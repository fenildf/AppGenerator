/**
 * Title: MainActivity.java
 * Description: 
 * Copyright: Copyright (c) 2013-2015 luoxudong.com
 * Company: 个人
 * Author: 罗旭东 (hi@luoxudong.com)
 * Date: 2015年7月28日 下午2:21:48
 * Version: 1.0
 */
package #{AppPackage}.ui.activities;

import android.graphics.drawable.Drawable;
import android.os.Bundle;
import android.support.v4.app.FragmentActivity;
import android.support.v4.app.FragmentManager;
import android.support.v4.app.FragmentTransaction;
import android.util.SparseArray;
import android.view.KeyEvent;
import android.view.View;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.RadioGroup.OnCheckedChangeListener;
import android.widget.RelativeLayout;

import #{AppPackage}.R;
import #{AppPackage}.logic.common.BaseConstant;
import #{AppPackage}.ui.fragments.BaseFragment;
import #{AppPackage}.ui.fragments.TabOneFragment;
import #{AppPackage}.ui.fragments.TabTwoFragment;
import #{AppPackage}.ui.fragments.TabThreeFragment;
import #{AppPackage}.ui.fragments.TabFourFragment;
import #{AppPackage}.ui.utils.ToastUtil;
import com.umeng.analytics.MobclickAgent;

/**
 * <pre>
 * ClassName: MainActivity
 * Description:TODO(这里用一句话描述这个类的作用)
 * Create by: 罗旭东
 * Date: 2015年7月28日 下午2:21:48
 * </pre>
 */
public class MainActivity extends FragmentActivity {
	private final static int REQUEST_CODE_LOGIN = 1;

	public final static int TAB_ID_DEFAULT = R.id.rb_tab_one;

	public static MainActivity sMainActivity = null;

	/** 底部tab栏 */
	private RadioGroup mBottomRadioGroup = null;

	private FragmentManager mFragmentManager = null;

	private SparseArray<BaseFragment> mFragmentSparseArray = null;

	/** 当前fragment */
	private BaseFragment mCurrentFragment = null;

	/** 上一个fragment */
	private BaseFragment mLastFragment = null;

	private RadioButton[] mRadioButtons = null;

	/** tab显示名称 */
	private String[] mRadioButtonTexts = null;

	/** radioButton的id */
	private int[] mRadioButtonIds = new int[] {R.id.rb_tab_one, R.id.rb_tab_two, R.id.rb_tab_three, R.id.rb_tab_four};

	/** tab的图标 */
	private int[] mRadioButtonImageIds = new int[] {R.drawable.btn_main_tabbar_one, R.drawable.btn_main_tabbar_two, R.drawable.btn_main_tabbar_three, R.drawable.btn_main_tabbar_four};

	@SuppressWarnings("unchecked")
	private Class<? extends BaseFragment>[] mTargetFragments = new Class[] {TabOneFragment.class, TabTwoFragment.class, TabThreeFragment.class, TabFourFragment.class };

	private long mTimestamp = 0;

	/** 当前选中的tab */
	private int mCheckedId = 0;


	private OnCheckedChangeListener onCheckedChangeListener = new OnCheckedChangeListener() {
		@Override
		public void onCheckedChanged(RadioGroup group, int checkedId) {
			switch (checkedId) {
			case R.id.rb_tab_one:
				break;
			case R.id.rb_tab_two:
				break;
			case R.id.rb_tab_three:
				break;
			case R.id.rb_tab_four:
				break;
			default:
				break;
			}

			changeTab(checkedId);
		}
	};

	@Override
	protected void onPause() {
		super.onPause();
		MobclickAgent.onPageEnd(getClass().getSimpleName());
		MobclickAgent.onPause(this);
	}

	@Override
	protected void onResume() {
		super.onResume();
		MobclickAgent.onPageStart(getClass().getSimpleName());
		MobclickAgent.onResume(this);
	}

	@Override
	public boolean onKeyDown(int keyCode, KeyEvent event) {
		if (keyCode == KeyEvent.KEYCODE_BACK
				&& event.getAction() == KeyEvent.ACTION_DOWN) {
			if (System.currentTimeMillis() - mTimestamp > BaseConstant.EXIT_APP_CLICK_TIME_INTERVAL * 1000) {
				mTimestamp = System.currentTimeMillis();
				ToastUtil.showToast(this, R.string.common_click_exit);
				return true;
			}
		}

		return super.onKeyDown(keyCode, event);
	}

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);

		setContentView(R.layout.activity_main);

		onCreateFindView(savedInstanceState);

		onCreateAddListener(savedInstanceState);

		onCreateInitData(savedInstanceState);

		sMainActivity = this;

	}

	/**
	 * actionbar 点击事件
	 */
	public void onClick(View v) {
		mCurrentFragment.onClick(v);// 点击事件传递给子fragment
	}

	/**
	 * 切换TAB
	 * 
	 * @param tabId
	 */
	public void swichTab(int tabId) {
		((RadioButton) mBottomRadioGroup.findViewById(tabId)).setChecked(true);
	}

	/**
	 * 初始化tab页面数据
	 */
	public void initTabsData() {
		if (mFragmentSparseArray != null) {
			for (int nIndex = 0; nIndex < mFragmentSparseArray.size(); nIndex++) {
				BaseFragment fragment = mFragmentSparseArray.get((Integer) mRadioButtonIds[nIndex]);
				fragment.refreshUI(null);
			}
		}

		swichTab(TAB_ID_DEFAULT);
		BaseActivity.releaseAllActivities();
	}

	protected void onCreateFindView(Bundle savedInstanceState) {
		mBottomRadioGroup = (RadioGroup) findViewById(R.id.rg_main_tab);
	}

	protected void onCreateAddListener(Bundle savedInstanceState) {
		mBottomRadioGroup.setOnCheckedChangeListener(onCheckedChangeListener);
	}

	protected void onCreateInitData(Bundle savedInstanceState) {
		mFragmentManager = getSupportFragmentManager();
		mFragmentSparseArray = new SparseArray<BaseFragment>();
		mRadioButtonTexts = getResources().getStringArray(R.array.mainBarRadioGroup);

		mRadioButtons = new RadioButton[mRadioButtonIds.length];

		try {
			for (int nIndex = 0; nIndex < mRadioButtonIds.length; nIndex++) {
				mRadioButtons[nIndex] = (RadioButton) mBottomRadioGroup.findViewById(mRadioButtonIds[nIndex]);
				mRadioButtons[nIndex].setText(mRadioButtonTexts[nIndex]);
				BaseFragment fragment = mTargetFragments[nIndex].newInstance();
				mFragmentSparseArray.put(mRadioButtonIds[nIndex], fragment);
				if (mRadioButtonImageIds != null) {
					Drawable drawable = getResources().getDrawable(mRadioButtonImageIds[nIndex]);
					mRadioButtons[nIndex].setCompoundDrawablesWithIntrinsicBounds(null, drawable, null, null);
				}
			}
		} catch (InstantiationException e) {
		} catch (IllegalAccessException e) {
		}

		FragmentTransaction ft = mFragmentManager.beginTransaction();
		mLastFragment = mCurrentFragment = mFragmentSparseArray
				.get((Integer) mRadioButtonIds[0]);
		mCheckedId = R.id.rb_tab_one;
		ft.add(R.id.main_content, mCurrentFragment);
		ft.commitAllowingStateLoss();
	}

	private void changeTab(int tabId) {
		FragmentTransaction ft = mFragmentManager.beginTransaction();
		mCurrentFragment = mFragmentSparseArray.get((Integer) tabId);

		if (mCurrentFragment == mLastFragment) {
			return;
		}

		if (!mCurrentFragment.isAdded()) {// fragment没有添加则添加
			ft.add(R.id.main_content, mCurrentFragment);
		}

		ft.hide(mLastFragment);
		ft.show(mCurrentFragment);
		mLastFragment = mCurrentFragment;
		ft.commitAllowingStateLoss();
		mCurrentFragment.showFragment();

		mCheckedId = tabId;
	}
}
